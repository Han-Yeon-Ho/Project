#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <SoftwareSerial.h>
 #include <time.h> 
#define SSID        "mo"  
#define PASSWORD    "01055396001"  
#define SERVERIP   "192.168.43.58"  
int timezone = 3; 
 time_t now;
 int dst = 0; 
 int data;
char* type;
String Ctime;
const char* ssid     = "mo";
const char* password = "01055396001";
String host = "192.168.43.58";
unsigned long previousMillis = 0;
 const long interval = 1000; 
  
 SoftwareSerial s(D6,D5);
const long interval2 = 5000;

extern volatile unsigned long timer0_millis; //타이머변수
unsigned long timeVal; //이전시간
unsigned long readTime; //현재타이머시간
int hour, mint, sec;
boolean state=false;

WiFiServer server(80);
WiFiClient client;
HTTPClient http;
//DHT DHTsensor(PIN_DHT, DHT11);
 
void setup() {
//  DHTsensor.begin();
   s.begin(9600);
  Serial.begin(9600);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connecting to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  server.begin();
  Serial.println("Server started");

 configTime(3 * 3600, 0, "pool.ntp.org", "time.nist.gov");
  Serial.println("\nWaiting for time");
  while (!time(nullptr)) {
    Serial.print(".");
    delay(1000);
  }
  Serial.println("");

}
 
void loop() {

//   String inString = Serial.readStringUntil('\n');    
//    int index1 = inString.indexOf(':'); 
//    int index2 = inString.indexOf(':',index1+1);   
//    int index3 = inString.length();
//    
//    hour = inString.substring(0, index1).toInt();
//    mint = inString.substring(index1+1,index2).toInt();
//    sec = inString.substring(index2+1,index3).toInt();
//  
//    
//    timer0_millis = ((long)hour*3600+mint*60+sec)*1000;
//    state=true;
//    timeVal=millis();
//  
//  if(state==true){ //시리얼모니털 출력 시작
//    
//    if(millis()-timeVal>=1000){ //1초 단위 출력
//     readTime = millis()/1000;
//      
//     if(millis()>=86400000){
//       timer0_millis=0;
//     }
//     timeVal = millis();
//   
//     sec = readTime%60;
//     mint = (readTime/60)%60;
//     hour = (readTime/(60*60))%24;       
//      
//     Serial.print(hour);
//     Serial.print(" : ");
//     Serial.print(mint);
//     Serial.print(" : ");
//     Serial.println(sec);      
//    }
//  }
   if(s.available()>0){

//      Ctime+=" : ";
//      Ctime +=(String)mint;
//      Ctime+=" : ";
//      Ctime+=(String)sec;
//       Serial.println(Ctime);
      data =s.read();
      
      Serial.println(data);
      if(data !=50)
       Serial.println("recv mega1");
       if(data==1){
        client.println("bluetooth"); 
        type = "2#OTD#1";
       }
    else if(data==2){
       client.println("keypad"); 
       type = "2#OTD#2";
       }
        Serial.println("recv mega");
  String a[3];
    
  time_t now = time(nullptr);
  struct tm * timeinfo;
  timeinfo = localtime(&now); 
  a[0]=String(timeinfo->tm_sec, DEC); 
  a[1]=String(timeinfo->tm_min, DEC); 
  a[2]=String((timeinfo->tm_hour+6), DEC);  
  if(timeinfo->tm_sec<10)      a[0]="0"+a[0];
  if(timeinfo->tm_min<10)      a[1]="0"+a[1];
  if(timeinfo->tm_hour+6>24)     {
    a[2]=String((timeinfo->tm_hour-18), DEC);  
    
    a[2]="0"+a[2];
  }
  if(timeinfo->tm_hour<10)     a[2]="0"+a[2];
  Ctime="";
  Ctime+=a[2];
//  Ctime+=".";
  Ctime+=a[1];
//  Ctime+=".";
  Ctime+=a[0];
  
  // 센서값 DB 전송 부분
  unsigned long currentMillis = millis();
  //int cutime=(int)millis();
  if(currentMillis - previousMillis >= interval2) {
    previousMillis = currentMillis;
//    float humidity = "3";
//    float temp = "4";
    int temp = data;
//    String cmd = "AT+CIPSTART=\"TCP\",\"";  
//     cmd += SERVERIP;  
//     cmd += "\",80"; 
//     Serial.println(cmd);  
//  //   mySerial.println(cmd); 
//    cmd = "GET /insert_data.php?num="+tmep+"\r\n";

    String phpHost ="AT+CIPSTART=\"TCP\",\"";
    phpHost += SERVERIP;  
    phpHost += "\",80"; 
    Serial.print("Connect to ");
    Serial.println(phpHost);
    phpHost = "http://192.168.43.58/insert_data.php?type=";
    phpHost +=temp;
    phpHost +="&time=";
    phpHost +=Ctime;
    phpHost +="\r\n";
    Serial.println(phpHost);
 //   phpHost = "GET /insert_data.php?temp="+temp+"&humidity="+temp+"\r\n";



    
//    String phpHost = host+"/insert_data.php?temp="+"3"+"&humidity="+"3";
//    Serial.print("Connect to ");
//    Serial.println(phpHost);
    
    http.begin(client, phpHost);
    http.setTimeout(1000);
    int httpCode = http.GET();
   
    if(httpCode > 0) {
      Serial.printf("GET code : %d\n\n", httpCode);
 
      if(httpCode == HTTP_CODE_OK) {
        String payload = http.getString();
        Serial.println(payload);
      }
    } 
    else {
      Serial.printf("GET failed, error: %s\n", http.errorToString(httpCode).c_str());
    }
    http.end();
  }
   }
  
  // 웹서버 부분
  client = server.available();
  if(!client) return;
 
  Serial.println("새로운 클라이언트");
  client.setTimeout(5000);
 
  String request = client.readStringUntil('\r');
  Serial.println("request: ");
  Serial.println(request);
 
  while(client.available()) {
    client.read();
  }
 
//  float humidity = "5.0";
//  float temp = "6.0";
 
  client.print("HTTP/1.1 200 OK");
  client.print("Content-Type: text/html\r\n\r\n");
  client.print("<!DOCTYPE HTML>");
  client.print("<html>");
  client.print("<head>"); 
  client.print("<meta charset=\"UTF-8\" http-equiv=\"refresh\" content=\"1\">");
  client.print("<title>DHT senrsor test Webpage</title>");
  client.print("</head>");
  client.print("<body>");
  client.print("<h2>DHT senrsor test Webpage</h2>");
  client.print("<br>");
  client.print("Temperature : ");
//  client.print(temp);
  client.print(" °C");
  client.print("<br>");
  client.print("Humidity : ");
//  client.print(humidity);
  client.print(" %");
  client.print("</body>");
  client.print("</html>");
 
  Serial.println("클라이언트 연결 해제");
}